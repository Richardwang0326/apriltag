// Generated by gencpp from file task/assignment.msg
// DO NOT EDIT!


#ifndef TASK_MESSAGE_ASSIGNMENT_H
#define TASK_MESSAGE_ASSIGNMENT_H

#include <ros/service_traits.h>


#include <task/assignmentRequest.h>
#include <task/assignmentResponse.h>


namespace task
{

struct assignment
{

typedef assignmentRequest Request;
typedef assignmentResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;

}; // struct assignment
} // namespace task


namespace ros
{
namespace service_traits
{


template<>
struct MD5Sum< ::task::assignment > {
  static const char* value()
  {
    return "1d701094808d2d1d11adf0aa9a8a6193";
  }

  static const char* value(const ::task::assignment&) { return value(); }
};

template<>
struct DataType< ::task::assignment > {
  static const char* value()
  {
    return "task/assignment";
  }

  static const char* value(const ::task::assignment&) { return value(); }
};


// service_traits::MD5Sum< ::task::assignmentRequest> should match
// service_traits::MD5Sum< ::task::assignment >
template<>
struct MD5Sum< ::task::assignmentRequest>
{
  static const char* value()
  {
    return MD5Sum< ::task::assignment >::value();
  }
  static const char* value(const ::task::assignmentRequest&)
  {
    return value();
  }
};

// service_traits::DataType< ::task::assignmentRequest> should match
// service_traits::DataType< ::task::assignment >
template<>
struct DataType< ::task::assignmentRequest>
{
  static const char* value()
  {
    return DataType< ::task::assignment >::value();
  }
  static const char* value(const ::task::assignmentRequest&)
  {
    return value();
  }
};

// service_traits::MD5Sum< ::task::assignmentResponse> should match
// service_traits::MD5Sum< ::task::assignment >
template<>
struct MD5Sum< ::task::assignmentResponse>
{
  static const char* value()
  {
    return MD5Sum< ::task::assignment >::value();
  }
  static const char* value(const ::task::assignmentResponse&)
  {
    return value();
  }
};

// service_traits::DataType< ::task::assignmentResponse> should match
// service_traits::DataType< ::task::assignment >
template<>
struct DataType< ::task::assignmentResponse>
{
  static const char* value()
  {
    return DataType< ::task::assignment >::value();
  }
  static const char* value(const ::task::assignmentResponse&)
  {
    return value();
  }
};

} // namespace service_traits
} // namespace ros

#endif // TASK_MESSAGE_ASSIGNMENT_H
